import time, datetime
import traceback
import json
import requests
import locale


from config import actions_api, chat_id, delay, BOARD_ID, exclude_lists_names
from trello_api_requests import *
def new_actions(new, old):
    actions = []
    for action in new:  # –ø–æ–∏—Å–∫ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if action not in old:
            actions.append(action)

    actions.reverse() # –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞, —á—Ç–æ–±—ã –±–æ—Ç —Å–ª–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ø—Ä—è–º–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–µ–π—Å—Ç–≤–∏–π
    return actions

def update_api(bot):

    result_old = get_actions_by_board(BOARD_ID)  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –±—ã–ª–æ —Å —á–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å
    # if "old" not in result_old[0]["data"]:
    #     result_old[0]["data"]["old"] = {}  # if not exists
    # # # # # # # # # #

    print("[#] Trello bot started..")
    print("Delay: " + str(delay) + " sec")
    while True:
        # # # # # # # # # #
        while True:
            try:
                result_new = get_actions_by_board(BOARD_ID) # –∑–∞–ø—Ä–æ—Å –Ω–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ä—ã–º–∏
                break
            except (json.decoder.JSONDecodeError, requests.exceptions.RequestException):
                print("=== Exception caught!")
                print(traceback.format_exc())
                time.sleep(5)
        # # # # # # # # # #

        actions = new_actions(result_new, result_old)

        print(actions)

        for action in actions: # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ

            event = action
            event_data = action["data"]
            # # # # # # # # # # #

            # UPDATING CARD PARAMETERS #
            if event['type'] == 'updateCard':

                # RENAMING CARD #
                if "name" in event_data["old"]:
                    old_name = event_data['old']['name']
                    card_name = event_data['card']['name']
                    link = event_data['card']['shortLink']
                    msg = f'''–ó–∞–¥–∞—á–∞ <i>{old_name}</i> –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ <a href='https://trello.com/c/{link}'><b>{card_name}</b></a>'''

                    bot.send_message(chat_id, msg, parse_mode='HTML')

                # MOVING CARD #
                elif "listBefore" in event_data and "listAfter" in event_data:
                    card_name = event_data['card']['name']
                    link = event_data['card']['shortLink']
                    lest_after = event_data['listAfter']['name']
                    msg = f"""–ó–∞–¥–∞—á–∞ <a href='https://trello.com/c/{link}'><b>{card_name}</b></a> –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ <b>{lest_after}</b>"""

                    bot.send_message(chat_id, msg, parse_mode='HTML')

                # ARCHIVING CARD #
                elif "closed" in event_data['card']:
                    card_name = event_data['card']['name']
                    link = event_data['card']['shortLink']
                    msg = f'''üóëÔ∏è –ó–∞–¥–∞—á–∞ <a href='https://trello.com/c/{link}'><i>{card_name}</i></a> <b>–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∞</b>'''

                    bot.send_message(chat_id, msg, parse_mode='HTML')

            # CREATING CARD #
            elif event["type"] == "createCard":
                card_name = event_data['card']['name']
                link = event_data['card']['shortLink']
                msg = f"""üî• –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ - <a href='https://trello.com/c/{link}'><b>{card_name}</b></a>"""

                bot.send_message(chat_id, msg, parse_mode='HTML')

            # ADDING MEMBER/LEAVING FROM CARD #
            elif event['type'] == 'addMemberToCard' or event['type'] == 'removeMemberFromCard':
                member = event_data['member']['name']
                card_name = event_data['card']['name']
                link = event_data['card']['shortLink']
                msg = f'''üî• <b>{member}</b> {'–≤–∑—è–ª(–∞)' if event['type'] == 'addMemberToCard' else '–±—Ä–æ—Å–∏–ª(–∞)'} –∑–∞–¥–∞—á—É <a href='https://trello.com/c/{link}'><b>{card_name}</b></a>'''

                bot.send_message(chat_id, msg, parse_mode='HTML')

            # UPDATING CHECKLIST #
            elif event['type'] == 'updateCheckItemStateOnCard':
                checklist = get_checklist_by_id(event_data['checklist']['id'])
                card = event_data['card']

                msg = f'''–û–±–Ω–æ–≤–ª–µ–Ω —á–µ–∫-–ª–∏—Å—Ç {checklist["name"]} –≤ <a href='trello.com/c/{card["shortLink"]}'><b>{card["name"]}</b></a>: \n\n'''
                for checkitem in checklist['checkItems']:
                    if checkitem['id'] == event_data['checkItem']['id']:
                        msg = msg + f'''{'‚úÖ' if checkitem['state'] == 'complete' else '‚ùå'} <b>{checkitem['name']}</b> \n'''
                    else:
                        msg = msg + f'''{'‚úÖ' if checkitem['state'] == 'complete' else '‚ùå'} {checkitem['name']} \n'''

                bot.send_message(chat_id, msg, parse_mode='HTML')

            # COMMENTING CARD #
            elif event['type'] == 'commentCard':

                if '–ì–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ' in event_data['text']:
                    delete_comment_by_action(event)
                    result_new.append(result_old[-1])
                    result_old.remove(result_old[-1])

                    # send_task ////




        # ANOTHER EVENT #
        # else:
        # 	msg = '<i>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ</i>'
        # 	bot.send_message(chat_id, msg, parse_mode='HTML')
        # # # # # # # #

        result_old = result_new
        time.sleep(delay)


def all_tasks(bot):
    locale.setlocale(locale.LC_ALL, ('ru_RU', 'UTF-8'))
    msg = F'''üìí <i>–í—Å–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:</i>

'''
    lists = get_lists_by_board(BOARD_ID)

    for list in lists:
        if not list["name"] in exclude_lists_names:
            msg = msg + f'''<b>{list["name"]}:</b>
'''
            cards = get_cards_by_list(list['id'])

            for card_raw in cards:
                card = get_card_by_id(card_raw['shortLink'])
                msg = msg + f'''- <a href='https://trello.com/c/{card_raw['shortLink']}'>{card["name"]}</a> - {datetime.datetime.strptime(card['start'].split('T')[0], '%Y-%m-%d').strftime('%d %b') if card["start"] else '–≤—Ä–µ–º—è –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'}
'''
            msg = msg + '''
'''
    return msg